#!/bin/bash

echo ""
echo "========================================"
echo "   SoapBoxx Demo - Quick Launcher"
echo "========================================"
echo ""

# Find Python command
PYTHON_CMD=""
if command -v python3 &> /dev/null; then
    PYTHON_CMD="python3"
elif command -v python &> /dev/null; then
    PYTHON_CMD="python"
else
    echo "‚ùå Python is not installed or not in PATH"
    echo "Please install Python 3.8+ and try again"
    exit 1
fi

# Check if we're in the right directory
if [ ! -f "frontend/main_window.py" ]; then
    echo "‚ùå main_window.py not found"
    echo "Please run this script from the SoapBoxx-Demo directory"
    echo ""
    echo "Current directory: $(pwd)"
    echo "Expected files: frontend/main_window.py"
    echo ""
    echo "Make sure you extracted the ZIP file and are in the SoapBoxx-Demo folder"
    exit 1
fi

# Check if we're in a demo package (standalone)
echo "‚úÖ Running from SoapBoxx Demo package"
echo ""

echo "‚úÖ Python found:"
$PYTHON_CMD --version
echo ""

# Check if required modules are installed
echo "üîç Checking dependencies..."

if ! $PYTHON_CMD -c "import PyQt6" &> /dev/null; then
    echo "‚ùå PyQt6 not installed"
    echo "Installing PyQt6..."
    pip install PyQt6
    if [ $? -ne 0 ]; then
        echo "‚ùå Failed to install PyQt6"
        exit 1
    fi
fi

if ! $PYTHON_CMD -c "import numpy" &> /dev/null; then
    echo "‚ùå numpy not installed"
    echo "Installing numpy..."
    pip install numpy
fi

if ! $PYTHON_CMD -c "import requests" &> /dev/null; then
    echo "‚ùå requests not installed"
    echo "Installing requests..."
    pip install requests
fi

echo "‚úÖ Dependencies ready!"
echo ""

# Check if barebones modules exist
echo "üîç Checking barebones modules..."

MISSING_MODULES=()

if [ ! -f "backend/feedback_engine_barebones.py" ]; then
    MISSING_MODULES+=("feedback_engine_barebones.py")
fi

if [ ! -f "backend/guest_research_barebones.py" ]; then
    MISSING_MODULES+=("guest_research_barebones.py")
fi

if [ ! -f "backend/transcriber_barebones.py" ]; then
    MISSING_MODULES+=("transcriber_barebones.py")
fi

if [ ! -f "backend/tts_generator_barebones.py" ]; then
    MISSING_MODULES+=("tts_generator_barebones.py")
fi

if [ ! -f "backend/soapboxx_core_barebones.py" ]; then
    MISSING_MODULES+=("soapboxx_core_barebones.py")
fi

if [ ${#MISSING_MODULES[@]} -gt 0 ]; then
    echo "‚ùå Missing modules:"
    for module in "${MISSING_MODULES[@]}"; do
        echo "   - $module"
    done
    echo "Please ensure the demo package is complete"
    exit 1
fi

echo "‚úÖ All barebones modules found!"
echo ""

echo "üöÄ Launching SoapBoxx Demo..."
echo ""
echo "========================================"
echo "   Demo Features Available:"
echo "========================================"
echo "üß† Content Analysis (SoapBoxx Tab)"
echo "üîç Guest Research (Scoop Tab)"
echo "üéµ Audio Features (Reverb Tab)"
echo "üìä Session Management"
echo "üé® Theme Customization"
echo "‚å®Ô∏è  Keyboard Shortcuts"
echo "========================================"
echo ""

# Launch the application
$PYTHON_CMD frontend/main_window.py

# Check exit code
if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ SoapBoxx Demo closed successfully"
else
    echo ""
    echo "‚ùå SoapBoxx Demo exited with an error"
    echo "Check the error messages above for details"
    echo ""
    echo "For help, see TUTORIAL_DEMO.md or README_DEMO.md"
fi

echo ""
read -p "Press Enter to continue..."
